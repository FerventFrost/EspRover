#include "Arduino.h"

// ACK doante by 1
// nonACK doante by 0
enum AckType {
    StartSetup,
    EndSetup,
    SendTelemetry,
    EndTelemetry,
    SendPlan,
    EndPlan,
    PlanReceived,
    PlanDone,
    PlanReSend,
    StratOnline,
    EndOnline
};

enum FrameType {
    Online,
    Offline,
    Request,
    Response,
    Data,
    Image
};


struct StructHeader
{
    /* data */
    FrameType Frametype; // Packet Type that indicate Plan is (online, offline, request, resend, data, or image)
    unsigned int SignetureKey;  //this is a random number that is generated by the ground station and sent to the rover
    char PacketHash[255];   //this is a hash of the packet that is generated by the ground station and sent to the rover
    short FrameLength; // Frame Length
    short CRC; // Sum of Frame Char
};
// From GS to Rover
struct StructBodyOffline
{
    /* data */
    short PlanID; // Plan Number
    byte SequenceID; //Frame Number in Plan
    byte SubSystemID;
    byte CommandID;
    byte Delay;
    byte CommandRepeat;
    unsigned int TimeBasedCommand;
};
// From GS to Rover
struct StructBodyOnline
{
    /* data */
    short PlanID; // Plan Number
    byte SequenceID; //Frame Number in Plan
    byte SubSystemID;
    byte CommandID;
    byte Delay;
    byte CommandRepeat;
};
// From GS to Rover
struct StructBodyRequest
{
    /* data */
    bool Ack;
    AckType Acktype;
};
// From Rover to GS
struct StructBodyResponse
{
    /* data */
    bool Ack;
    AckType Acktype;
};
// From Rover to GS
struct StructBodyData
{
    /* data */
    short PlanID; // Plan Number
    byte SequenceID; //Frame Number in Plan
    // Data;
    unsigned int Time;
};
// From Rover to GS
struct StructBodyImage
{
    /* data */
    short PlanID; // Plan Number
    byte SequenceID; //Frame Number in Plan
    // Camera;
    unsigned int Time;
};

struct StructCommand
{
    StructHeader header;
    // Body
};

struct StructPlan
{
    /* data */
    String command;
};